plugins {
    id 'java'
    id 'io.quarkus'
    id 'net.ltgt.apt' version '0.20'
}

apply plugin: 'net.ltgt.apt-idea'

sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.14.3")
    set('mapstructVersion', "1.3.1.Final")
    set('lombokVersion', "1.18.12")
    set('liquibaseVersion', "4.3.0")
    set('mongodbVersion', "4.0.4")
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy-jackson'
//    implementation 'io.quarkus:quarkus-mongodb-panache'
//    implementation 'io.quarkus:quarkus-resteasy'
//    implementation 'io.quarkus:quarkus-arc'

    implementation 'io.quarkus:quarkus-mongodb-rest-data-panache'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-liquibase'
    implementation "org.liquibase.ext:liquibase-mongodb:${liquibaseVersion}"
    implementation "org.mongodb:mongodb-driver-sync:${mongodbVersion}"

    implementation "io.quarkus:quarkus-smallrye-openapi"

    implementation "io.quarkus.quarkus-vault"

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
//    testImplementation 'io.quarkus:quarkus-panache-mock'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'

    testImplementation "org.testcontainers:mongodb:1.15.2"
    testImplementation "org.testcontainers:junit-jupiter:1.15.2"

    compile "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

//dependencyManagement {
//    imports {
//        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
//    }
//}

//tasks.withType(JavaCompile) {
//    options.compilerArgs = [
//            '-Amapstruct.suppressGeneratorTimestamp=true',
//            '-Amapstruct.unmappedTargetPolicy=ERROR'
//    ]
//}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
